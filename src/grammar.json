{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "slisp",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "top_level_statement"
          },
          {
            "type": "SYMBOL",
            "name": "comment"
          }
        ]
      }
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": ";.*"
      }
    },
    "top_level_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "function_definition"
        },
        {
          "type": "SYMBOL",
          "name": "load_module"
        }
      ]
    },
    "function_definition": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "STRING",
            "value": "def"
          },
          {
            "type": "FIELD",
            "name": "name",
            "content": {
              "type": "SYMBOL",
              "name": "symbol"
            }
          },
          {
            "type": "FIELD",
            "name": "parameters",
            "content": {
              "type": "SYMBOL",
              "name": "parameters"
            }
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "FIELD",
                "name": "docstring",
                "content": {
                  "type": "SYMBOL",
                  "name": "string"
                }
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "statement"
            }
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    },
    "parameters": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "symbol"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SYMBOL",
                "name": "symbol"
              }
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "."
                    },
                    {
                      "type": "SYMBOL",
                      "name": "symbol"
                    }
                  ]
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        }
      ]
    },
    "load_module": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "STRING",
            "value": "load"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "'"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "symbol"
                    }
                  ]
                },
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "'"
                    },
                    {
                      "type": "STRING",
                      "value": "("
                    },
                    {
                      "type": "REPEAT",
                      "content": {
                        "type": "SYMBOL",
                        "name": "symbol"
                      }
                    },
                    {
                      "type": "STRING",
                      "value": ")"
                    }
                  ]
                }
              ]
            }
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    },
    "statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "apply"
        },
        {
          "type": "SYMBOL",
          "name": "special_form"
        },
        {
          "type": "SYMBOL",
          "name": "lambda"
        },
        {
          "type": "SYMBOL",
          "name": "tilde"
        },
        {
          "type": "SYMBOL",
          "name": "backquote"
        },
        {
          "type": "SYMBOL",
          "name": "quote"
        },
        {
          "type": "SYMBOL",
          "name": "terminal"
        }
      ]
    },
    "dot_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "."
        },
        {
          "type": "SYMBOL",
          "name": "statement"
        }
      ]
    },
    "apply": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "symbol"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "statement"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "dot_statement"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "special_form": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "cond"
            },
            {
              "type": "STRING",
              "value": "if"
            },
            {
              "type": "STRING",
              "value": "let"
            },
            {
              "type": "STRING",
              "value": "match"
            },
            {
              "type": "STRING",
              "value": "prog"
            },
            {
              "type": "STRING",
              "value": "quote"
            },
            {
              "type": "STRING",
              "value": "syscall"
            },
            {
              "type": "STRING",
              "value": "unless"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "statement"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "lambda": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "FIELD",
            "name": "parameters",
            "content": {
              "type": "SYMBOL",
              "name": "parameters"
            }
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "statement"
            }
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    },
    "tilde": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "~"
        },
        {
          "type": "SYMBOL",
          "name": "statement"
        }
      ]
    },
    "backquote": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "`"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "list_or_terminal"
            },
            {
              "type": "SYMBOL",
              "name": "unquote"
            }
          ]
        }
      ]
    },
    "quote": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "'"
        },
        {
          "type": "SYMBOL",
          "name": "list_or_terminal"
        }
      ]
    },
    "unquote": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": ","
        },
        {
          "type": "SYMBOL",
          "name": "statement"
        }
      ]
    },
    "list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "item"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "dot_item"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "dot_item": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "."
        },
        {
          "type": "SYMBOL",
          "name": "item"
        }
      ]
    },
    "item": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "tilde"
        },
        {
          "type": "SYMBOL",
          "name": "list_or_terminal"
        }
      ]
    },
    "list_or_terminal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "list"
        },
        {
          "type": "SYMBOL",
          "name": "terminal"
        }
      ]
    },
    "terminal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "char"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "symbol"
        }
      ]
    },
    "number": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "-?[0-9]+"
      }
    },
    "char": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\\^([!-\\[]|[\\]-~]|\\\\\\\\|\\\\e|\\\\n|\\\\r|\\\\t)"
      }
    },
    "string": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\"([^\"\\\\]|\\\\[\"\\\\0\\\\e\\\\n\\\\r\\\\t])*\""
      }
    },
    "symbol": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "nil"
        },
        {
          "type": "STRING",
          "value": "t"
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "([a-zA-Z]|[!@$%&*_+\\-={}\\[\\]:#|\\\\<>?/])([a-zA-Z0-9]|[!@$%&*_+\\-={}\\[\\]:;|\\\\<>?,/]){0,14}"
          }
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "(\\s|\\f)"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}